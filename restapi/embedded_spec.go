// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Sidetree Node",
    "title": "Sidetree API",
    "version": "0.1.0"
  },
  "basePath": "/.sidetree",
  "paths": {
    "/document": {
      "post": {
        "description": "Create side tree did document",
        "produces": [
          "application/json",
          "application/jose"
        ],
        "parameters": [
          {
            "description": "create sidetree document",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "created",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/document/{DidOrDidDocument}": {
      "get": {
        "description": "Fetches the latest DID Document of a DID.",
        "produces": [
          "application/did+ld+json"
        ],
        "parameters": [
          {
            "type": "string",
            "description": "DidOrDidDocument can either be 1. Fully qualified DID 2. An encoded DID Document prefixed by the DID method name",
            "name": "DidOrDidDocument",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the did document",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "Header": {
      "type": "object",
      "required": [
        "alg",
        "kid",
        "operation"
      ],
      "properties": {
        "alg": {
          "type": "string"
        },
        "kid": {
          "type": "string"
        },
        "operation": {
          "$ref": "#/definitions/OperationType"
        }
      }
    },
    "OperationType": {
      "type": "string",
      "enum": [
        "create",
        "update",
        "delete",
        "recover"
      ]
    },
    "Request": {
      "type": "object",
      "required": [
        "payload",
        "signature",
        "header"
      ],
      "properties": {
        "header": {
          "$ref": "#/definitions/Header"
        },
        "payload": {
          "type": "string"
        },
        "signature": {
          "type": "string"
        }
      }
    },
    "Response": {
      "type": "object",
      "properties": {
        "body": {
          "type": "object"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Sidetree Node",
    "title": "Sidetree API",
    "version": "0.1.0"
  },
  "basePath": "/.sidetree",
  "paths": {
    "/document": {
      "post": {
        "description": "Create side tree did document",
        "produces": [
          "application/json",
          "application/jose"
        ],
        "parameters": [
          {
            "description": "create sidetree document",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "created",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/document/{DidOrDidDocument}": {
      "get": {
        "description": "Fetches the latest DID Document of a DID.",
        "produces": [
          "application/did+ld+json"
        ],
        "parameters": [
          {
            "type": "string",
            "description": "DidOrDidDocument can either be 1. Fully qualified DID 2. An encoded DID Document prefixed by the DID method name",
            "name": "DidOrDidDocument",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the did document",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "Header": {
      "type": "object",
      "required": [
        "alg",
        "kid",
        "operation"
      ],
      "properties": {
        "alg": {
          "type": "string"
        },
        "kid": {
          "type": "string"
        },
        "operation": {
          "$ref": "#/definitions/OperationType"
        }
      }
    },
    "OperationType": {
      "type": "string",
      "enum": [
        "create",
        "update",
        "delete",
        "recover"
      ]
    },
    "Request": {
      "type": "object",
      "required": [
        "payload",
        "signature",
        "header"
      ],
      "properties": {
        "header": {
          "$ref": "#/definitions/Header"
        },
        "payload": {
          "type": "string"
        },
        "signature": {
          "type": "string"
        }
      }
    },
    "Response": {
      "type": "object",
      "properties": {
        "body": {
          "type": "object"
        }
      }
    }
  }
}`))
}
